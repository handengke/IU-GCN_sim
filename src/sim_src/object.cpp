/*
 Created by Dengke Han, on 2022/07/26

 Refer to unigcn_acc by YMY / Colleen
*/

#include<object.h>

//to deline m_inf_event_cnt by 1
bool object::clear_event(){
    m_inf_event_cnt--;
    return true;
}

//to block an event
bool object::block_event(event_t* pEvent){
    pEvent->valid_cycle_time++;
    return true;
}

//to release 1 occupancy of this mod
bool object::release_occupy(){
    m_func_opy_cnt--;
    return true;
}

//to occupy this mod one more time
bool object::func_occupied(){
    if(m_func_opy_cnt<m_max_func_opy_cnt){
        m_func_opy_cnt++;
        return true;
    }
    return false;
}

//to set event properties generated by this module
void object::set_event(bool self_trigger, event_t* pEvent, uint64_t dst_mod_type=0, uint64_t dst_mod_idx=0){
    pEvent->src_mod_type=m_mod_type;
    pEvent->src_mod_idx=m_mod_idx;
    pEvent->dst_mod_type=dst_mod_type;
    pEvent->dst_mod_idx=dst_mod_idx;
    pEvent->self_trigger=self_trigger;
    if(self_trigger){
        pEvent->dst_mod_type=m_mod_type;
        pEvent->dst_mod_idx=m_mod_idx;
    }else{
        m_inf_event_cnt++;
    }
}
